1) arduino_driver.py.....class Arduino

  def get_pidin(self):
    	values = self.execute_array('i')
    	if len(values) != 2:
           print "get_pidin count was not 2"
           raise SerialException
           return None
    	else:
			return values

	def get_pidout(self):
		values = self.execute_array('f')
		if len(values) != 2:
			print "get_pidout count was not 2"
			raise SerialException
			return None
		else:
			return values

2) base_controller.py

self.odomPub = rospy.Publisher(‘odom’, Odometry) 上面添加如下内容

    self.lEncoderPub = rospy.Publisher('Lencoder', Int32)
		self.rEncoderPub = rospy.Publisher('Rencoder', Int32)
		self.lPidoutPub = rospy.Publisher('Lpidout', Int32)
		self.rPidoutPub = rospy.Publisher('Rpidout', Int32)
		self.lVelPub = rospy.Publisher('Lvel', Int32)
		self.rVelPub = rospy.Publisher('Rvel', Int32)

在poll(self)函数的if now > self.t_next: 下面添加如下代码：

    #For PID test
			try:
				left_pidin, right_pidin = self.arduino.get_pidin()
			except:
				rospy.logerr("getpidout exception count: ")
				return
			self.lEncoderPub.publish(left_pidin)
			self.rEncoderPub.publish(right_pidin)

			try:
				left_pidout, right_pidout = self.arduino.get_pidout()
			except:
				rospy.logerr("getpidout exception count: ")
				return
			self.lPidoutPub.publish(left_pidout)
			self.rPidoutPub.publish(right_pidout)

在poll(self)函数的if not self.stopped:前面添加如下代码：

    self.lVelPub.publish(self.v_left)
		self.rVelPub.publish(self.v_right)

